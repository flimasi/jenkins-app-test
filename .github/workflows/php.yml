name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest
  unit-test:
    name: PhpUnit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      # For YAML Actions, use v1 or later
      - uses: pxgamer/phpunit-action@master
        with:
          # If there isn't a PHPUnit config, specify files or directories to test
          command: tests/
  phpstan:
    name: phpstan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Run phpstan
        uses: actions-x/phpstan@v1
        with:
          installComposer: 0
          phpstanVersion: 0.12.37
          level: 5
          paths: src
          configPath: ""
          useBundled: 0
          arguments: ""
  phpcs:
    name: phpcs
    runs-on: ubuntu-latest
    steps:
      - name: php-codesniffer
        uses: pipeline-components/php-codesniffer@v0.12.3
        with:
          # Directory to check
          # directory:
          # Additional options
          options: --extensions=php --standard=PSR1 --ignore=/tests,/public,/vendor /src
      
